// Mixins

// All mixins used in this projects should be listed here.
// Mixins are currenly used to add browser specific prefixes for
// maximum control of the CSS output.

// Create fallback for css variables
@mixin var($property, $var-name) {
  // sass-lint:disable-block no-duplicate-properties
  #{$property}: #{map-deep-get($color-theme, light, $var-name)};
  #{$property}: var(--c-#{$var-name}, #{map-deep-get($color-theme, light, $var-name)});
}

@mixin flex-display {
  // sass-lint:disable-block no-duplicate-properties
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@mixin _flex-direction-prefixes($direction) {
  @if $direction == row {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
  } @else if $direction == row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
  } @else if $direction == column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
  } @else if $direction == column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: $direction;
  }
}

@mixin flex-direction($direction: row) {
  @include _flex-direction-prefixes($direction);
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

@mixin _justify-content-prefixes($justify) {
  @if $justify == center {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
  } @else if $justify == flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  } @else if $justify == flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  } @else if $justify == space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  } @else if $justify == space-around {
    -ms-flex-pack: distribute;
  } @else {
    -webkit-box-pack: $justify;
    -ms-flex-pack: $justify;
  }
}

@mixin justify-content($justify: flex-start) {
  @include _justify-content-prefixes($justify);
  justify-content: $justify;
}

@mixin _flex-align-items-prefixes($align) {
  @if $align == flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  } @else if $align == flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $align;
    -ms-flex-align: $align;
  }
}

@mixin align-items($align: stretch) {
  @include _flex-align-items-prefixes($align);
  align-items: $align;
}

@mixin position-sticky {
  // sass-lint:disable-block no-duplicate-properties
  position: -webkit-sticky;
  position: sticky;
}

@mixin transform($value...) {
  -webkit-transform: $value;
  -ms-transform: $value;
  transform: $value;
}

@mixin transform-origin($value) {
  -webkit-transform-origin: $value;
  -ms-transform-origin: $value;
  transform-origin: $value;
}
